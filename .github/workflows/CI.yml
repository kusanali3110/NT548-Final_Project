name: Security scan and publish images

on:
  pull_request:
    branches:
      - development
  push:
    branches:
      - development

jobs:
  security-scan:
    name: Security scan
    runs-on: self-hosted
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Analysis
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        with:
          sonarQubeUrl: ${{ secrets.SONARQUBE_URL }}
          token: ${{ secrets.SONARQUBE_TOKEN }}
          projectKey: ${{ secrets.SONARQUBE_PROJECT_KEY }}
      
      - name: Add .env files
        env: 
          REACT_APP_LOCALHOST_KEY: ${{ secrets.REACT_APP_LOCALHOST_KEY}}
          DB_PORT: ${{ secrets.DB_PORT}}
          DB_URL: ${{ secrets.DB_URL}}
        run: |
          echo "REACT_APP_LOCALHOST_KEY=$REACT_APP_LOCALHOST_KEY" > ./public/.env
          echo "PORT=$DB_PORT" > ./server/.env
          echo "MONGO_URL=$DB_URL" > ./server/.env

      - name: Build images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t $DOCKER_USERNAME/frontend:latest  ./public/
          docker build -t $DOCKER_USERNAME/backend:latest  ./server/
      
      - name: Scan image with Trivy
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --severity HIGH,CRITICAL $DOCKER_USERNAME/frontend:latest
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --severity HIGH,CRITICAL $DOCKER_USERNAME/backend:latest
          
  publish-image:
    name: Publish images
    runs-on: self-hosted
    if: github.event_name == 'push'

    steps:
      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      
      - name: Push image
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
        run: |
          docker push $DOCKER_USERNAME/frontend:latest
          docker push $DOCKER_USERNAME/backend:latest
