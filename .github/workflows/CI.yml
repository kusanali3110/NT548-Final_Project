name: Security scan and publish images

on:
  pull_request:
    branches:
      - main
      - development
  push:
    branches:
      - main
      - development

jobs:
  security-scan:
    name: Security scan
    runs-on: self-hosted
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        with:
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST_URL }}
            -Dsonar.projectKey=${{ secrets.SONARQUBE_PROJECT_KEY }}
            -Dsonar.token=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.sources=./
          
  publish-image:
    name: Publish images
    runs-on: self-hosted
    if: github.event_name == 'push'

    steps:
      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t $DOCKER_USERNAME/netflix:${{ vars.VERSION }} --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_V3_API_KEY }}  ./App/
      
      - name: Scan image with Trivy
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}/trivy-results:/trivy-results \
            aquasec/trivy:latest image \
            --severity HIGH,CRITICAL \
            --format table \
            --output /trivy-results/trivy-report.txt \
            $DOCKER_USERNAME/netflix:${{ vars.VERSION }}
          sudo chown -R $USER:$USER ${{ github.workspace }}/trivy-results

      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-report
          path: trivy-results/trivy-report.txt
      
      - name: Cleanup Trivy results
        run: rm -rf ${{ github.workspace }}/trivy-results
      
      - name: Push image
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
        run: |
          docker push $DOCKER_USERNAME/netflix:${{ vars.VERSION }}

      - name: Delete local images
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME}}
        run: |
          docker image rm $DOCKER_USERNAME/netflix:${{ vars.VERSION }}

